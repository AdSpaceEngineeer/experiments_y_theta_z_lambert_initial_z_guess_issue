import numpy as np
import math
import matplotlib.pyplot as plt

def func_C(z):
    if z>0:
        c = (1-math.cos(np.sqrt(z)))/z
    elif z < 0 : 
        c = (math.cosh(np.sqrt(-z)) - 1)/(-z)
    else: 
        c = 1/2
    return c

def func_S(z):
    if z>0: 
        s = (np.sqrt(z) - math.sin(np.sqrt(z)))/ (np.sqrt(z))**3
    elif z<0 : 
        s = (math.sinh(np.sqrt(-z)) - np.sqrt(-z))/ (np.sqrt(-z))**3
    else: 
        s = 1/6
    return s
    
    r1 = 4
r2 = 6
theta = (7/20)*math.pi #manually run values of theta from 1st to 4th quadrant

A = np.sqrt(r1*r2)*math.sin(theta)/np.sqrt(1-math.cos(theta))
zi_range = np.arange(-40, 40, 2)
y = np.zeros(len(zi_range))
i=0


for zi in zi_range:
    C = func_C(zi)
    S = func_S(zi)
    y[i] = r1 + r2 + A*(zi*S-1)/np.sqrt(C) 
    i+=1
    
plt.plot(zi_range, y, color = 'black')
plt.axhline(y=0)
plt.axvline(x=0)
plt.title('y vs z for theta = 7pi/20') #change plot title according to theta value given
plt.xlabel('z values from -40 to 40')
plt.ylabel('y as a func of z and theta in Lambert solvers')
plt.show()
